/*
 * Maze Game API
 * A simple single-player maze game.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import java.math.BigDecimal;
import org.openapitools.client.model.GameDto;
import org.openapitools.client.model.GameInputDto;
import org.openapitools.client.model.MoveDto;
import org.openapitools.client.model.MoveInputDto;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Get game status
     *
     * Retrieves the current game status.
     */
    @Test
    public void gameGameIdGetTest()  {
        BigDecimal gameId = null;
        GameDto response = api.gameGameIdGet(gameId);

        // TODO: test validations
    }
    
    /**
     * Get all moves
     *
     * Retrieves the history of moves the player has made in the game.
     */
    @Test
    public void gameGameIdMoveGetTest()  {
        BigDecimal gameId = null;
        List<MoveDto> response = api.gameGameIdMoveGet(gameId);

        // TODO: test validations
    }
    
    /**
     * Get move
     *
     * Retrieves the move.
     */
    @Test
    public void gameGameIdMoveMoveIdGetTest()  {
        BigDecimal gameId = null;
        BigDecimal moveId = null;
        MoveDto response = api.gameGameIdMoveMoveIdGet(gameId, moveId);

        // TODO: test validations
    }
    
    /**
     * Move in the maze
     *
     * Move the player in the given direction.
     */
    @Test
    public void gameGameIdMovePostTest()  {
        BigDecimal gameId = null;
        MoveInputDto moveInputDto = null;
        MoveDto response = api.gameGameIdMovePost(gameId, moveInputDto);

        // TODO: test validations
    }
    
    /**
     * Start a new game
     *
     * Creates a new game instance and returns the initial player position.
     */
    @Test
    public void gamePostTest()  {
        GameInputDto gameInputDto = null;
        GameDto response = api.gamePost(gameInputDto);

        // TODO: test validations
    }
    
}